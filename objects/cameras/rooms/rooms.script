---@type number
enabled_camera = 1
local interference = {
	used = false;
	using_time_max = 1;
	using_time = 0;
}

local function play_interference()
	if interference.used then
		interference.using_time = 0
		return
	end

	local cam_pos = go.get_position("/cameras")
	cam_pos.z = 1
	go.set_position(cam_pos, "/cameras")

	local tv_pos = go.get_position("/interference")
	tv_pos.z = 0.99
	go.set_position(tv_pos, "/interference")

	interference.used = true
end

---@author Check animatronics existing in this camera
local function check_animatronics_existing()
	msg.post("animatronics:/floppa_in_bucket", "get_way_point")
	msg.post("animatronics:/balloon_floppa", "get_way_point")

	play_interference()
end

---@param cam_number number
local function change_camera(cam_number)
	-- Turn off previous camera
	local vec_prev = go.get("/r".. enabled_camera, "position")
	vec_prev.z = -10
	go.set("/r".. enabled_camera, "position", vec_prev)

	-- Turn on new camera
	local vec_sender = go.get("/r"..cam_number, "position")
	vec_sender.z = 0
	go.set("/r"..cam_number, "position", vec_sender)

	enabled_camera = cam_number

	check_animatronics_existing()
end






function init(self)
	sprite.set_hflip("/fib2#floppa_in_bucket", true)

	check_animatronics_existing()
end

function update(self, dt)
	if interference.used then
		interference.using_time = interference.using_time + dt;
		if interference.using_time > interference.using_time_max then
			interference.used = false;
			interference.using_time = 0;

			local cam_pos = go.get_position("/cameras")
			cam_pos.z = 0.9
			go.set_position(cam_pos, "/cameras")

			local tv_pos = go.get_position("/interference")
			tv_pos.z = -2
			go.set_position(tv_pos, "/interference")
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("change_camera") then
		change_camera(message.cam_number)

	elseif message_id == hash("way_point") then
		-- Animatronics in enabled_camera check
		if message.way_point == enabled_camera then
			msg.post(message.sprite_name.. enabled_camera, "enable")
			play_interference()
		else
			msg.post(message.sprite_name.. enabled_camera, "disable")
		end
	end
end
